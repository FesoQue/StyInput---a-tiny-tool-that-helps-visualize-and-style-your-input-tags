{"version":3,"sources":["App.js","index.js"],"names":["App","useState","fontSize","setFontSize","fontColor","setFontColor","color","setColor","bgColor","setBgColor","showPicker","setShowPicker","showTextClr","setTextClr","showBgClr","setBgClr","focusBoxShdwClr","setFocusBoxShdwClr","showBShdw","setShowBoxShdw","radius","setRadius","borderSize","setBorderSize","boxShadow","setBoxShadow","outline","setOutline","topPadding","setTopPadding","rightPadding","setRightPadding","leftPadding","setLeftPadding","bottomPadding","setBottomPadding","focusShdwVal","setFocusShdwVal","copyCode","setCopyCode","handleBorder","e","radiusValue","target","value","handleBorderRadius","handleBoxShadow","shadowValue","handleFocusShdwVal","refContainer","useRef","borderEl","borderRadiusEl","boxShadowEl","focusShdwEl","useEffect","current","style","background","inputCSSCodes","setTimeout","className","type","name","id","onFocus","onBlur","border","ref","placeholder","paddingTop","paddingRight","paddingLeft","paddingBottom","borderRadius","outlineWidth","htmlFor","onChange","onClick","onChangeComplete","hex","min","max","step","onInput","checked","navigator","clipboard","writeText","href","rel","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee75fd3f.chunk.js","sourcesContent":["import { useState, useRef, useEffect } from 'react';\nimport { TwitterPicker } from 'react-color';\n\nconst App = () => {\n  const [fontSize, setFontSize] = useState('22');\n  const [fontColor, setFontColor] = useState('#000000');\n  const [color, setColor] = useState('#000000');\n  const [bgColor, setBgColor] = useState('#ffffff');\n  const [showPicker, setShowPicker] = useState(false);\n  const [showTextClr, setTextClr] = useState(false);\n  const [showBgClr, setBgClr] = useState(false);\n  const [focusBoxShdwClr, setFocusBoxShdwClr] = useState('#000000');\n  const [showBShdw, setShowBoxShdw] = useState(false);\n  const [radius, setRadius] = useState('1');\n  const [borderSize, setBorderSize] = useState('1');\n  const [boxShadow, setBoxShadow] = useState('0');\n  const [outline, setOutline] = useState('0');\n  const [topPadding, setTopPadding] = useState('0');\n  const [rightPadding, setRightPadding] = useState('0');\n  const [leftPadding, setLeftPadding] = useState('0');\n  const [bottomPadding, setBottomPadding] = useState('0');\n  const [focusShdwVal, setFocusShdwVal] = useState('0');\n  const [copyCode, setCopyCode] = useState(false);\n\n  // font-size\n  const handleFontSize = (e) => {\n    const value = e.target.value;\n    setFontSize(value);\n  };\n  // top padding\n  const handleTopPadding = (e) => {\n    const value = e.target.value;\n    setTopPadding(value);\n  };\n  // right padding\n  const handleRightPadding = (e) => {\n    const value = e.target.value;\n    setRightPadding(value);\n  };\n  // left padding\n  const handleLeftPadding = (e) => {\n    const value = e.target.value;\n    setLeftPadding(value);\n  };\n  // bottom padding\n  const handleBottomPadding = (e) => {\n    const value = e.target.value;\n    setBottomPadding(value);\n  };\n  // border\n  const handleBorder = (e) => {\n    const radiusValue = e.target.value;\n    setBorderSize(radiusValue);\n  };\n  // border-radius\n  const handleBorderRadius = (e) => {\n    const radiusValue = e.target.value;\n    setRadius(radiusValue);\n  };\n  // box-shadow\n  const handleBoxShadow = (e) => {\n    const shadowValue = e.target.value;\n    setBoxShadow(shadowValue);\n  };\n  // onFocus box-shadow\n  const handleFocusShdwVal = (e) => {\n    const shadowValue = e.target.value;\n    setFocusShdwVal(shadowValue);\n  };\n  // enable/disable outline\n  const handleCheckbox = (e) => {\n    const value = e.target.checked;\n    if (value) {\n      setOutline('1');\n    } else {\n      setOutline('0');\n    }\n  };\n  // show color picker\n  const handleShowPicker = () => {\n    setShowPicker(true);\n  };\n  // :onFocus\n  const handleFocusShdwClr = () => {\n    setShowBoxShdw(true);\n  };\n  const refContainer = useRef(null);\n  const handleOnFocus = () => {\n    refContainer.current.style.boxShadow = `${focusBoxShdwClr} 0 0 ${focusShdwVal}px ${focusShdwVal}px`;\n  };\n  const handleOnBlur = () => {\n    refContainer.current.style.boxShadow = `${color} 0 0 0 ${boxShadow}px`;\n    refContainer.current.style.border = `${color} 0 0 0 ${radius}px`;\n  };\n  // border el\n  const borderEl = useRef(null);\n  const borderRadiusEl = useRef(null);\n  const boxShadowEl = useRef(null);\n  const focusShdwEl = useRef(null);\n\n  useEffect(() => {\n    // border\n    borderEl.current.style.background = `linear-gradient(to right, #a5f3eb ${\n      borderSize * 10\n    }%, #a5f3eb ${borderSize * 10}%, #faf9f9 ${\n      borderSize * 10\n    }%, #faf9f9 100%)`;\n    // border radius\n    borderRadiusEl.current.style.background = `linear-gradient(to right, #a5f3eb ${\n      radius * 2\n    }%, #a5f3eb ${radius * 2}%, #faf9f9 ${radius * 2}%, #faf9f9 100%)`;\n    // box shadow\n    boxShadowEl.current.style.background = `linear-gradient(to right, #a5f3eb ${\n      boxShadow * 10\n    }%, #a5f3eb ${boxShadow * 10}%, #faf9f9 ${boxShadow * 10}%, #faf9f9 100%)`;\n    // :on focus box-shadow\n    focusShdwEl.current.style.background = `linear-gradient(to right, #a5f3eb ${\n      focusShdwVal * 10\n    }%, #a5f3eb ${focusShdwVal * 10}%, #faf9f9 ${\n      focusShdwVal * 10\n    }%, #faf9f9 100%)`;\n  }, [borderSize, radius, boxShadow, focusShdwVal]);\n\n  const inputCSSCodes = `input {\n    width: 100%;\n    font: inherit;\n    font-size: ${fontSize}px;\n    color: ${fontColor};\n    background: ${bgColor};\n    padding: ${topPadding}px, ${rightPadding}px, ${bottomPadding}px, ${leftPadding}px;\n    border: ${borderSize}px solid ${color};\n    border-radius: ${radius}px;\n    box-shadow: 0 0 0 ${boxShadow}px ${color};\n    outline-width: ${outline}px;\n    transition: all 0.2s ease;\n  }\n  \n  input:focus {\n    box-shadow: 0 0 0 ${focusShdwVal}px ${focusBoxShdwClr};\n  }\n\n  /* remove if your input type is \"text\" or \"email\" */\n  input[type='number'] {\n  -webkit-appearance: textfield;\n  }\n  input[type='number'] {\n  -moz-appearance: textfield;\n  }\n\n  /* removes chrome autocomplete pale blue highlight */\n  input:-webkit-autofill,\n  input:-webkit-autofill:hover,\n  input:-webkit-autofill:focus,\n  input:-webkit-autofill:active {\n  -webkit-box-shadow: 0 0 0 30px white inset !important;\n  box-shadow: 0 0 0 30px white inset !important;\n}\n  `;\n\n  // copy css codes\n  const copyCodes = () => {\n    navigator.clipboard.writeText(inputCSSCodes);\n    setCopyCode(true);\n  };\n  setTimeout(() => {\n    setCopyCode(false);\n  }, 2000);\n\n  return (\n    <section>\n      {/* header */}\n      <header>\n        <div className='title'>\n          <h1>StyInput</h1>\n          <p>Visualiz👁 your input styles</p>\n        </div>\n      </header>\n      <form>\n        <div className='preview-text'>\n          <h2>Preview:</h2>\n        </div>\n        <div className='preview'>\n          <input\n            type='text'\n            name=''\n            id='input'\n            onFocus={handleOnFocus}\n            onBlur={handleOnBlur}\n            ref={refContainer}\n            placeholder='Style me'\n            style={{\n              fontSize: `${fontSize}px`,\n              color: `${fontColor}`,\n              background: `${bgColor}`,\n              paddingTop: `${topPadding}px`,\n              paddingRight: `${rightPadding}px`,\n              paddingLeft: `${leftPadding}px`,\n              paddingBottom: `${bottomPadding}px`,\n              borderRadius: `${radius}px`,\n              border: `${borderSize}px solid ${color}`,\n              boxShadow: `0 0 0 ${boxShadow}px ${color}`,\n              outlineWidth: `${outline}px`,\n            }}\n          />\n        </div>\n        <div className='form-groups'>\n          <div className='title'>\n            <h2>Customize Widget: </h2>\n          </div>\n          {/* TEXTS */}\n          <div className='fonts'>\n            <div className='props-title'>\n              <h3>Text:</h3>\n            </div>\n            <div className='fonts-prop'>\n              <div className='fontSize'>\n                <label htmlFor='fontsize'>Font-Size:</label>\n                <input\n                  type='number'\n                  name='font-size'\n                  id='fontsize'\n                  className='box'\n                  value={fontSize}\n                  onChange={handleFontSize}\n                />\n                <span> px</span>\n              </div>\n              {/* font color */}\n              <div className='color-wrapper'>\n                <div className='color'>\n                  <p>Font-Color:</p>\n                  <div\n                    onClick={() => setTextClr(true)}\n                    className='color-palettes'\n                    style={{\n                      background: `${fontColor}`,\n                      boxShadow: `0 0 0 3px ${fontColor}`,\n                    }}\n                  ></div>\n                </div>\n                {showTextClr ? (\n                  <div className='color-picker font-clr-picker'>\n                    {/* close btn */}\n                    <span onClick={() => setTextClr(!showTextClr)}>\n                      <i className='fas fa-times'></i>\n                    </span>\n                    <div className='twitter-clr-picker '>\n                      <TwitterPicker\n                        className='picker font-picker'\n                        fontColor={fontColor}\n                        onChangeComplete={(fontColor) => {\n                          setFontColor(fontColor.hex);\n                        }}\n                      />\n                    </div>\n                  </div>\n                ) : null}\n              </div>\n              {/* background color */}\n              <div className='color-wrapper'>\n                <div className='color'>\n                  <p>Background Color:</p>\n                  <div\n                    onClick={() => setBgClr(true)}\n                    className='color-palettes'\n                    style={{\n                      background: `${bgColor}`,\n                      boxShadow: `0 0 0 3px ${bgColor}`,\n                    }}\n                  ></div>\n                </div>\n                {showBgClr ? (\n                  <div className='color-picker'>\n                    {/* close btn */}\n                    <span onClick={() => setBgClr(!showBgClr)}>\n                      <i className='fas fa-times'></i>\n                    </span>\n                    <div className='twitter-clr-picker '>\n                      <TwitterPicker\n                        className='picker'\n                        fontColor={bgColor}\n                        onChangeComplete={(bgColor) => {\n                          setBgColor(bgColor.hex);\n                        }}\n                      />\n                    </div>\n                  </div>\n                ) : null}\n              </div>\n            </div>\n          </div>\n          {/* PADDINGS */}\n          <div className='box-sizing'>\n            <div className='padding'>\n              <div className='props-title'>\n                <h3>Padding:</h3>\n              </div>\n              <div className='padding-props'>\n                {/* top */}\n                <div className='padding-props-t'>\n                  <label htmlFor='top'>Top:</label>\n                  <input\n                    type='number'\n                    name='p-top'\n                    id='top'\n                    className='box'\n                    value={topPadding}\n                    onChange={handleTopPadding}\n                  />\n                  <span> px:</span>\n                </div>\n                {/* right */}\n                <div className='padding-props-r'>\n                  <label htmlFor='right'>Right:</label>\n                  <input\n                    type='number'\n                    name='p-right'\n                    id='right'\n                    className='box'\n                    value={rightPadding}\n                    onChange={handleRightPadding}\n                  />\n                  <span> px:</span>\n                </div>\n                {/* left */}\n                <div className='padding-props-l'>\n                  <label htmlFor='left'>Left:</label>\n                  <input\n                    type='number'\n                    name='p-left'\n                    id='left'\n                    className='box'\n                    value={leftPadding}\n                    onChange={handleLeftPadding}\n                  />\n                  <span> px:</span>\n                </div>\n                {/* bottom */}\n                <div className='padding-props-b'>\n                  <label htmlFor='bottom'>Bottom:</label>\n                  <input\n                    type='number'\n                    name='p-bottom'\n                    id='bottom'\n                    className='box'\n                    value={bottomPadding}\n                    onChange={handleBottomPadding}\n                  />\n                  <span> px;</span>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* BORDER-PROPS */}\n          <div className='border-props'>\n            <div className='grp1'>\n              {/* border */}\n              <div className='widget'>\n                <label htmlFor='border'>Border: </label>\n                <input\n                  type='range'\n                  name='border'\n                  id='border'\n                  ref={borderEl}\n                  min='0'\n                  max='10'\n                  step='1'\n                  value={borderSize}\n                  onChange={handleBorder}\n                  onInput={handleBorder}\n                />\n              </div>\n              {/* border-radius */}\n              <div className='widget'>\n                <label htmlFor='border-radius'>Border-Radius: </label>\n                <input\n                  type='range'\n                  name='border-radius'\n                  id='border-radius'\n                  ref={borderRadiusEl}\n                  min='0'\n                  max='50'\n                  step='1'\n                  value={radius}\n                  onChange={handleBorderRadius}\n                  onInput={handleBorderRadius}\n                />\n              </div>\n            </div>\n            <div className='grp2'>\n              {/* box-shadow */}\n              <div className='widget'>\n                <label htmlFor='box-shadow'>Box-Shadow: </label>\n                <input\n                  type='range'\n                  name='box-shadow'\n                  id='box-shadow'\n                  ref={boxShadowEl}\n                  min='0'\n                  max='10'\n                  step='1'\n                  value={boxShadow}\n                  onChange={handleBoxShadow}\n                  onInput={handleBoxShadow}\n                />\n              </div>\n              {/* border/box-shadow color */}\n              <div className='widget'>\n                <div className='color-wrapper'>\n                  <div className='color border-color'>\n                    <p>Border/Box-Shadow Color:</p>\n                    <div\n                      onClick={handleShowPicker}\n                      className='color-palettes border-clr-picker'\n                      style={{\n                        background: `${color}`,\n                        boxShadow: `0 0 0 3px ${color}`,\n                      }}\n                    ></div>\n                  </div>\n                  {showPicker ? (\n                    <div className='color-picker color-palettes-picker'>\n                      {/* close btn */}\n                      <span onClick={() => setShowPicker(!showPicker)}>\n                        <i className='fas fa-times'></i>\n                      </span>\n                      <div className='twitter-clr-picker'>\n                        <TwitterPicker\n                          className='picker palettes-picker'\n                          color={color}\n                          onChangeComplete={(color) => {\n                            setColor(color.hex);\n                          }}\n                        />\n                      </div>\n                    </div>\n                  ) : null}\n                </div>\n              </div>\n            </div>\n            {/* outline */}\n            <div className='widget outline'>\n              <label htmlFor='outline'>Outline:</label>\n              <input\n                type='checkbox'\n                name='outline'\n                id='outline'\n                onChange={handleCheckbox}\n              />\n            </div>\n          </div>\n          {/* ON FOCUS */}\n          <div className='pseudo-class'>\n            <div className='props-title'>\n              <h3>:Focus</h3>\n            </div>\n            <div className='focus-el'>\n              {/* box-shadow */}\n              <div className='widget'>\n                <label htmlFor='onfocusBS'>Box-Shadow: </label>\n                <input\n                  type='range'\n                  name='onfocusBS'\n                  id='onfocusBS'\n                  ref={focusShdwEl}\n                  min='0'\n                  max='10'\n                  step='1'\n                  value={focusShdwVal}\n                  onChange={handleFocusShdwVal}\n                  onInput={handleFocusShdwVal}\n                />\n              </div>\n              {/* border/box-shadow color */}\n              <div className='widget'>\n                <div className='color-wrapper'>\n                  <div className='color border-color'>\n                    <p>Box-Shadow Color:</p>\n                    <div\n                      onClick={handleFocusShdwClr}\n                      className='color-palettes border-clr-picker'\n                      style={{\n                        background: `${focusBoxShdwClr}`,\n                        boxShadow: `0 0 0 3px ${focusBoxShdwClr}`,\n                      }}\n                    ></div>\n                  </div>\n                  {showBShdw ? (\n                    <div className='color-picker color-palettes-picker'>\n                      {/* close btn */}\n                      <span onClick={() => setShowBoxShdw(!showBShdw)}>\n                        <i className='fas fa-times'></i>\n                      </span>\n                      <div className='twitter-clr-picker'>\n                        <TwitterPicker\n                          className='picker palettes-picker'\n                          focusBoxShdwClr={focusBoxShdwClr}\n                          onChangeComplete={(focusBoxShdwClr) => {\n                            setFocusBoxShdwClr(focusBoxShdwClr.hex);\n                          }}\n                        />\n                      </div>\n                    </div>\n                  ) : null}\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* copy css code */}\n          {copyCode ? (\n            <div className='copied'>\n              <span>\n                <i className='fas fa-check'></i>\n              </span>\n            </div>\n          ) : (\n            <span className='copyIcon' onClick={copyCodes}>\n              <i className='far fa-copy'></i>\n            </span>\n          )}\n        </div>\n      </form>\n      {/* footer */}\n      <div className='footer'>\n        <div className='footer-content'>\n          <div className='socials'>\n            {/* twitter */}\n            <a\n              href='https://www.twitter.com/q__hue'\n              className='twitter'\n              target='_blank'\n              rel='noreferrer'\n            >\n              Twitter\n            </a>\n            {/* twitter */}\n            <a\n              href='https://github.com/FesoQue'\n              className='github'\n              target='_blank'\n              rel='noreferrer'\n            >\n              Github\n            </a>\n            {/* mail */}\n            <a href='mailto:adefesoq0@gmail.com' className='mail'>\n              Mail me\n            </a>\n          </div>\n          <div className='attribution'>\n            <p>\n              Made with{' '}\n              <span>\n                <i className='fas fa-heart'></i>\n              </span>{' '}\n              by Adefeso Q.A\n            </p>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}